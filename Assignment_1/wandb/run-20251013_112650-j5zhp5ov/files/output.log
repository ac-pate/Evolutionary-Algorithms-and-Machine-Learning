Initialized wandb tracking: odin_pop_300_gen_100_mut_020_problem_3.2_run001_20251013_112650
Added wandb logging callback to EA
Enhanced progress monitoring enabled
Progress monitoring enabled for 300 individuals, 100 generations
EA Progress Monitoring Started
==================================================
Starting evolution: 300 individuals, 100 generations
Using 28 parallel workers for fitness evaluation
Sequence constraint: NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Structure constraint: ..............[[...((((((((((........(((((..(((.......)))...)))))))))))))))........(((((((...(((....)))]]...)))))))(((((((....)))))))..................((((((((....))))))))........................
Initializing population...
Initialized population with 300 individuals
Gen   1/100 (  1.0%) | Best: 0.5590, Avg: 0.4020, Diversity: 0.7498 | Time: 0.2min, ETA: calculating...
Gen   2/100 (  2.0%) | Best: 0.6000, Avg: 0.4174, Diversity: 0.7454 | Time: 0.3min, ETA: 14.9min
Gen   3/100 (  3.0%) | Best: 0.6000, Avg: 0.4284, Diversity: 0.7394 | Time: 0.4min, ETA: 13.6min
Gen   4/100 (  4.0%) | Best: 0.6205, Avg: 0.4386, Diversity: 0.7289 | Time: 0.5min, ETA: 12.9min
Gen   5/100 (  5.0%) | Best: 0.5949, Avg: 0.4486, Diversity: 0.7135 | Time: 0.6min, ETA: 12.3min
Gen   6/100 (  6.0%) | Best: 0.6513, Avg: 0.4633, Diversity: 0.6910 | Time: 0.8min, ETA: 11.8min
Gen   7/100 (  7.0%) | Best: 0.6359, Avg: 0.4808, Diversity: 0.6726 | Time: 0.9min, ETA: 11.3min
Gen   8/100 (  8.0%) | Best: 0.6359, Avg: 0.4920, Diversity: 0.6463 | Time: 1.0min, ETA: 10.9min
Gen   9/100 (  9.0%) | Best: 0.6410, Avg: 0.4958, Diversity: 0.6265 | Time: 1.0min, ETA: 10.5min
Gen  10/100 ( 10.0%) | Best: 0.6821, Avg: 0.4995, Diversity: 0.6163 | Time: 1.1min, ETA: 10.2min
Gen  11/100 ( 11.0%) | Best: 0.6872, Avg: 0.5144, Diversity: 0.5985 | Time: 1.2min, ETA: 10.0min
Gen  12/100 ( 12.0%) | Best: 0.6923, Avg: 0.5229, Diversity: 0.5707 | Time: 1.3min, ETA: 9.7min
Gen  13/100 ( 13.0%) | Best: 0.6923, Avg: 0.5314, Diversity: 0.5476 | Time: 1.5min, ETA: 9.8min
Gen  14/100 ( 14.0%) | Best: 0.6974, Avg: 0.5478, Diversity: 0.5152 | Time: 1.6min, ETA: 9.6min
Gen  15/100 ( 15.0%) | Best: 0.6974, Avg: 0.5538, Diversity: 0.4992 | Time: 1.6min, ETA: 9.3min
Gen  16/100 ( 16.0%) | Best: 0.7179, Avg: 0.5607, Diversity: 0.4897 | Time: 1.7min, ETA: 9.0min
Gen  17/100 ( 17.0%) | Best: 0.7385, Avg: 0.5715, Diversity: 0.4763 | Time: 1.8min, ETA: 8.8min
Gen  18/100 ( 18.0%) | Best: 0.7128, Avg: 0.5823, Diversity: 0.4423 | Time: 1.9min, ETA: 8.6min
Gen  19/100 ( 19.0%) | Best: 0.7231, Avg: 0.5940, Diversity: 0.4199 | Time: 2.0min, ETA: 8.4min
Gen  20/100 ( 20.0%) | Best: 0.7231, Avg: 0.6012, Diversity: 0.3944 | Time: 2.0min, ETA: 8.2min
Gen  21/100 ( 21.0%) | Best: 0.7128, Avg: 0.6023, Diversity: 0.3770 | Time: 2.1min, ETA: 8.0min
Gen  22/100 ( 22.0%) | Best: 0.7231, Avg: 0.6116, Diversity: 0.3666 | Time: 2.2min, ETA: 7.9min
Gen  23/100 ( 23.0%) | Best: 0.7590, Avg: 0.6068, Diversity: 0.3499 | Time: 2.3min, ETA: 7.7min
Gen  24/100 ( 24.0%) | Best: 0.7590, Avg: 0.6089, Diversity: 0.3372 | Time: 2.4min, ETA: 7.5min
Gen  25/100 ( 25.0%) | Best: 0.7436, Avg: 0.6238, Diversity: 0.3124 | Time: 2.4min, ETA: 7.3min
Gen  26/100 ( 26.0%) | Best: 0.7641, Avg: 0.6284, Diversity: 0.2935 | Time: 2.5min, ETA: 7.1min
Gen  27/100 ( 27.0%) | Best: 0.7692, Avg: 0.6358, Diversity: 0.2772 | Time: 2.6min, ETA: 6.9min
Gen  28/100 ( 28.0%) | Best: 0.7590, Avg: 0.6374, Diversity: 0.2702 | Time: 2.6min, ETA: 6.8min
Gen  29/100 ( 29.0%) | Best: 0.7590, Avg: 0.6500, Diversity: 0.2655 | Time: 2.7min, ETA: 6.6min
Gen  30/100 ( 30.0%) | Best: 0.7641, Avg: 0.6488, Diversity: 0.2547 | Time: 2.8min, ETA: 6.5min
Gen  31/100 ( 31.0%) | Best: 0.7692, Avg: 0.6604, Diversity: 0.2442 | Time: 2.8min, ETA: 6.3min
Gen  32/100 ( 32.0%) | Best: 0.7897, Avg: 0.6636, Diversity: 0.2420 | Time: 2.9min, ETA: 6.1min
Gen  33/100 ( 33.0%) | Best: 0.7795, Avg: 0.6657, Diversity: 0.2313 | Time: 3.0min, ETA: 6.0min
Gen  34/100 ( 34.0%) | Best: 0.7795, Avg: 0.6673, Diversity: 0.2165 | Time: 3.0min, ETA: 5.9min
Gen  35/100 ( 35.0%) | Best: 0.7846, Avg: 0.6655, Diversity: 0.2073 | Time: 3.1min, ETA: 5.7min
Anti-stagnation: Restarted 120 individuals (parallelized)
Gen  36/100 ( 36.0%) | Best: 0.7846, Avg: 0.5946, Diversity: 0.5446 | Time: 3.2min, ETA: 5.8min
Gen  37/100 ( 37.0%) | Best: 0.7846, Avg: 0.6129, Diversity: 0.4232 | Time: 3.3min, ETA: 5.7min
Gen  38/100 ( 38.0%) | Best: 0.7897, Avg: 0.6346, Diversity: 0.3402 | Time: 3.4min, ETA: 5.6min
Gen  39/100 ( 39.0%) | Best: 0.7897, Avg: 0.6419, Diversity: 0.3004 | Time: 3.5min, ETA: 5.5min
Gen  40/100 ( 40.0%) | Best: 0.7949, Avg: 0.6682, Diversity: 0.2388 | Time: 3.6min, ETA: 5.3min
Gen  41/100 ( 41.0%) | Best: 0.7949, Avg: 0.6778, Diversity: 0.2159 | Time: 3.6min, ETA: 5.2min
Anti-stagnation: Restarted 120 individuals (parallelized)
Gen  42/100 ( 42.0%) | Best: 0.7949, Avg: 0.6099, Diversity: 0.5396 | Time: 3.8min, ETA: 5.2min
Gen  43/100 ( 43.0%) | Best: 0.7949, Avg: 0.6287, Diversity: 0.4112 | Time: 3.9min, ETA: 5.2min
Gen  44/100 ( 44.0%) | Best: 0.7949, Avg: 0.6648, Diversity: 0.2909 | Time: 4.0min, ETA: 5.0min
Gen  45/100 ( 45.0%) | Best: 0.7949, Avg: 0.6724, Diversity: 0.2451 | Time: 4.0min, ETA: 4.9min
Gen  46/100 ( 46.0%) | Best: 0.7949, Avg: 0.6843, Diversity: 0.2172 | Time: 4.1min, ETA: 4.8min
Anti-stagnation: Restarted 120 individuals (parallelized)
Gen  47/100 ( 47.0%) | Best: 0.8000, Avg: 0.6051, Diversity: 0.5329 | Time: 4.3min, ETA: 4.8min
Gen  48/100 ( 48.0%) | Best: 0.8000, Avg: 0.6188, Diversity: 0.4076 | Time: 4.3min, ETA: 4.7min
Gen  49/100 ( 49.0%) | Best: 0.8000, Avg: 0.6532, Diversity: 0.3028 | Time: 4.4min, ETA: 4.6min
Gen  50/100 ( 50.0%) | Best: 0.8000, Avg: 0.6716, Diversity: 0.2441 | Time: 4.5min, ETA: 4.5min
Gen  51/100 ( 51.0%) | Best: 0.8000, Avg: 0.6845, Diversity: 0.2051 | Time: 4.6min, ETA: 4.4min
Anti-stagnation: Restarted 120 individuals (parallelized)
Gen  52/100 ( 52.0%) | Best: 0.8000, Avg: 0.6100, Diversity: 0.5335 | Time: 4.8min, ETA: 4.4min
Gen  53/100 ( 53.0%) | Best: 0.8000, Avg: 0.6180, Diversity: 0.4121 | Time: 4.8min, ETA: 4.3min
Gen  54/100 ( 54.0%) | Best: 0.8051, Avg: 0.6441, Diversity: 0.3148 | Time: 4.9min, ETA: 4.2min
Gen  55/100 ( 55.0%) | Best: 0.8000, Avg: 0.6686, Diversity: 0.2490 | Time: 5.0min, ETA: 4.1min
Gen  56/100 ( 56.0%) | Best: 0.8000, Avg: 0.6832, Diversity: 0.2226 | Time: 5.1min, ETA: 4.0min
Gen  57/100 ( 57.0%) | Best: 0.8051, Avg: 0.6844, Diversity: 0.2089 | Time: 5.1min, ETA: 3.9min
Anti-stagnation: Restarted 120 individuals (parallelized)
Gen  58/100 ( 58.0%) | Best: 0.8051, Avg: 0.6081, Diversity: 0.5364 | Time: 5.3min, ETA: 3.9min
Gen  59/100 ( 59.0%) | Best: 0.8051, Avg: 0.6211, Diversity: 0.4119 | Time: 5.5min, ETA: 3.8min
Gen  60/100 ( 60.0%) | Best: 0.8051, Avg: 0.6551, Diversity: 0.3164 | Time: 5.6min, ETA: 3.7min
Gen  61/100 ( 61.0%) | Best: 0.8051, Avg: 0.6718, Diversity: 0.2508 | Time: 5.7min, ETA: 3.6min
Gen  62/100 ( 62.0%) | Best: 0.8051, Avg: 0.6845, Diversity: 0.2144 | Time: 5.7min, ETA: 3.5min
Anti-stagnation: Restarted 120 individuals (parallelized)
Gen  63/100 ( 63.0%) | Best: 0.8051, Avg: 0.6159, Diversity: 0.5342 | Time: 5.9min, ETA: 3.5min
Gen  64/100 ( 64.0%) | Best: 0.8051, Avg: 0.6233, Diversity: 0.4248 | Time: 6.0min, ETA: 3.4min
Gen  65/100 ( 65.0%) | Best: 0.8051, Avg: 0.6432, Diversity: 0.3530 | Time: 6.1min, ETA: 3.3min
Gen  66/100 ( 66.0%) | Best: 0.8051, Avg: 0.6641, Diversity: 0.2879 | Time: 6.2min, ETA: 3.2min
Gen  67/100 ( 67.0%) | Best: 0.8051, Avg: 0.6907, Diversity: 0.2305 | Time: 6.2min, ETA: 3.1min
Gen  68/100 ( 68.0%) | Best: 0.8051, Avg: 0.7036, Diversity: 0.2076 | Time: 6.3min, ETA: 3.0min
Anti-stagnation: Restarted 120 individuals (parallelized)
Gen  69/100 ( 69.0%) | Best: 0.8051, Avg: 0.6280, Diversity: 0.5344 | Time: 6.5min, ETA: 2.9min
Gen  70/100 ( 70.0%) | Best: 0.8051, Avg: 0.5823, Diversity: 0.4451 | Time: 6.6min, ETA: 2.8min
Traceback (most recent call last):
  File "/home/odin/achal/Evolutionary-Algorithms-and-Machine-Learning/Assignment_1/src/ea_runner.py", line 734, in <module>
    main()
  File "/home/odin/achal/Evolutionary-Algorithms-and-Machine-Learning/Assignment_1/src/ea_runner.py", line 678, in main
    run_experiment(experiment, device=args.device, problems_to_run=problems_to_run, run_number=args.run, enable_wandb=enable_wandb)
  File "/home/odin/achal/Evolutionary-Algorithms-and-Machine-Learning/Assignment_1/src/ea_runner.py", line 579, in run_experiment
    result = run_single_problem(
             ^^^^^^^^^^^^^^^^^^^
  File "/home/odin/achal/Evolutionary-Algorithms-and-Machine-Learning/Assignment_1/src/ea_runner.py", line 411, in run_single_problem
    ea.run_evolution()
  File "/home/odin/achal/Evolutionary-Algorithms-and-Machine-Learning/Assignment_1/src/progress_monitor.py", line 138, in enhanced_run_evolution
    original_run_evolution()
  File "/home/odin/achal/Evolutionary-Algorithms-and-Machine-Learning/Assignment_1/src/rna_folding_ea.py", line 575, in run_evolution
    fitness_scores = self.evaluate_fitness(self.population)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/odin/achal/Evolutionary-Algorithms-and-Machine-Learning/Assignment_1/src/rna_folding_ea.py", line 247, in evaluate_fitness
    fitness_scores = list(executor.map(evaluate_single, sequences))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 619, in result_iterator
    yield _result_or_cancel(fs.pop())
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 317, in _result_or_cancel
    return fut.result(timeout)
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 451, in result
    self._condition.wait(timeout)
  File "/usr/lib/python3.12/threading.py", line 355, in wait
    waiter.acquire()
KeyboardInterrupt
