Initialized wandb tracking: odin_pop_300_gen_150_mut_020_problem_1.2_run001_20251013_120854
Added wandb logging callback to EA
Enhanced progress monitoring enabled
Progress monitoring enabled for 300 individuals, 150 generations
EA Progress Monitoring Started
==================================================
Starting evolution: 300 individuals, 150 generations
Using 28 parallel workers for fitness evaluation
Sequence constraint: NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Structure constraint: ((((....))))....(((((.......)))))............(((((.......[[[[[[))))).]]]]]]...
Initializing population...
Initialized population with 300 individuals
Gen   1/150 (  0.7%) | Best: 0.6026, Avg: 0.3580, Diversity: 0.7498 | Time: 0.0min, ETA: calculating...
Gen   2/150 (  1.3%) | Best: 0.5769, Avg: 0.3648, Diversity: 0.7472 | Time: 0.1min, ETA: 5.7min
Gen   3/150 (  2.0%) | Best: 0.6026, Avg: 0.3606, Diversity: 0.7447 | Time: 0.1min, ETA: 5.8min
Gen   4/150 (  2.7%) | Best: 0.6154, Avg: 0.3678, Diversity: 0.7414 | Time: 0.2min, ETA: 5.7min
Gen   5/150 (  3.3%) | Best: 0.6026, Avg: 0.3500, Diversity: 0.7354 | Time: 0.2min, ETA: 5.7min
Gen   6/150 (  4.0%) | Best: 0.6154, Avg: 0.3519, Diversity: 0.7337 | Time: 0.2min, ETA: 5.7min
Gen   7/150 (  4.7%) | Best: 0.6923, Avg: 0.3518, Diversity: 0.7324 | Time: 0.3min, ETA: 5.7min
Gen   8/150 (  5.3%) | Best: 0.6154, Avg: 0.3584, Diversity: 0.7317 | Time: 0.3min, ETA: 5.6min
Gen   9/150 (  6.0%) | Best: 0.6538, Avg: 0.3688, Diversity: 0.7303 | Time: 0.4min, ETA: 5.6min
Gen  10/150 (  6.7%) | Best: 0.6410, Avg: 0.3603, Diversity: 0.7285 | Time: 0.4min, ETA: 5.6min
Gen  11/150 (  7.3%) | Best: 0.6667, Avg: 0.3629, Diversity: 0.7227 | Time: 0.4min, ETA: 5.5min
Gen  12/150 (  8.0%) | Best: 0.6410, Avg: 0.3638, Diversity: 0.7186 | Time: 0.5min, ETA: 5.5min
Gen  13/150 (  8.7%) | Best: 0.6410, Avg: 0.3632, Diversity: 0.7137 (stagnant: 6) | Time: 0.5min, ETA: 5.4min
Gen  14/150 (  9.3%) | Best: 0.6667, Avg: 0.3714, Diversity: 0.7071 (stagnant: 7) | Time: 0.6min, ETA: 5.4min
Gen  15/150 ( 10.0%) | Best: 0.6410, Avg: 0.3857, Diversity: 0.6924 (stagnant: 8) | Time: 0.6min, ETA: 5.3min
Gen  16/150 ( 10.7%) | Best: 0.6410, Avg: 0.3910, Diversity: 0.6787 (stagnant: 9) | Time: 0.6min, ETA: 5.3min
Anti-stagnation: Restarted 90 individuals (parallelized)
Gen  17/150 ( 11.3%) | Best: 0.6667, Avg: 0.4164, Diversity: 0.7056 | Time: 0.7min, ETA: 5.5min
Gen  18/150 ( 12.0%) | Best: 0.6923, Avg: 0.3879, Diversity: 0.7009 | Time: 0.7min, ETA: 5.4min
Gen  19/150 ( 12.7%) | Best: 0.7308, Avg: 0.3862, Diversity: 0.7007 | Time: 0.8min, ETA: 5.4min
Gen  20/150 ( 13.3%) | Best: 0.6282, Avg: 0.3842, Diversity: 0.6983 | Time: 0.8min, ETA: 5.3min
Gen  21/150 ( 14.0%) | Best: 0.6282, Avg: 0.3894, Diversity: 0.7009 | Time: 0.9min, ETA: 5.3min
Gen  22/150 ( 14.7%) | Best: 0.6282, Avg: 0.3833, Diversity: 0.7010 | Time: 0.9min, ETA: 5.2min
Gen  23/150 ( 15.3%) | Best: 0.6282, Avg: 0.3813, Diversity: 0.6998 | Time: 0.9min, ETA: 5.1min
Gen  24/150 ( 16.0%) | Best: 0.6282, Avg: 0.3774, Diversity: 0.6990 | Time: 1.0min, ETA: 5.1min
Gen  25/150 ( 16.7%) | Best: 0.7051, Avg: 0.3833, Diversity: 0.6919 (stagnant: 6) | Time: 1.0min, ETA: 5.1min
Gen  26/150 ( 17.3%) | Best: 0.7179, Avg: 0.3869, Diversity: 0.6850 (stagnant: 7) | Time: 1.0min, ETA: 5.0min
Gen  27/150 ( 18.0%) | Best: 0.7179, Avg: 0.3942, Diversity: 0.6725 (stagnant: 8) | Time: 1.1min, ETA: 5.0min
Gen  28/150 ( 18.7%) | Best: 0.7436, Avg: 0.4094, Diversity: 0.6532 | Time: 1.1min, ETA: 4.9min
Gen  29/150 ( 19.3%) | Best: 0.7564, Avg: 0.4055, Diversity: 0.6516 | Time: 1.2min, ETA: 4.9min
Gen  30/150 ( 20.0%) | Best: 0.7564, Avg: 0.4099, Diversity: 0.6421 | Time: 1.2min, ETA: 4.8min
Gen  31/150 ( 20.7%) | Best: 0.7179, Avg: 0.4195, Diversity: 0.6361 | Time: 1.2min, ETA: 4.8min
Gen  32/150 ( 21.3%) | Best: 0.6923, Avg: 0.4126, Diversity: 0.6378 | Time: 1.3min, ETA: 4.8min
Gen  33/150 ( 22.0%) | Best: 0.6923, Avg: 0.4129, Diversity: 0.6241 | Time: 1.3min, ETA: 4.7min
Gen  34/150 ( 22.7%) | Best: 0.7051, Avg: 0.4191, Diversity: 0.6159 | Time: 1.4min, ETA: 4.7min
Gen  35/150 ( 23.3%) | Best: 0.7051, Avg: 0.4199, Diversity: 0.6041 (stagnant: 6) | Time: 1.4min, ETA: 4.7min
Gen  36/150 ( 24.0%) | Best: 0.7436, Avg: 0.4265, Diversity: 0.6038 (stagnant: 7) | Time: 1.5min, ETA: 4.6min
Gen  37/150 ( 24.7%) | Best: 0.7436, Avg: 0.4350, Diversity: 0.5928 (stagnant: 8) | Time: 1.5min, ETA: 4.6min
Gen  38/150 ( 25.3%) | Best: 0.7692, Avg: 0.4309, Diversity: 0.5973 | Time: 1.5min, ETA: 4.5min
Gen  39/150 ( 26.0%) | Best: 0.7821, Avg: 0.4209, Diversity: 0.6042 | Time: 1.6min, ETA: 4.5min
Gen  40/150 ( 26.7%) | Best: 0.7821, Avg: 0.4282, Diversity: 0.5965 | Time: 1.6min, ETA: 4.5min
Gen  41/150 ( 27.3%) | Best: 0.7692, Avg: 0.4295, Diversity: 0.5940 | Time: 1.7min, ETA: 4.4min
Gen  42/150 ( 28.0%) | Best: 0.7692, Avg: 0.4227, Diversity: 0.5938 | Time: 1.7min, ETA: 4.4min
Gen  43/150 ( 28.7%) | Best: 0.7051, Avg: 0.4211, Diversity: 0.5919 | Time: 1.7min, ETA: 4.3min
Gen  44/150 ( 29.3%) | Best: 0.7179, Avg: 0.4182, Diversity: 0.5869 | Time: 1.8min, ETA: 4.3min
Gen  45/150 ( 30.0%) | Best: 0.7179, Avg: 0.4066, Diversity: 0.5842 (stagnant: 6) | Time: 1.8min, ETA: 4.3min
Gen  46/150 ( 30.7%) | Best: 0.7051, Avg: 0.4200, Diversity: 0.5877 (stagnant: 7) | Time: 1.9min, ETA: 4.2min
Gen  47/150 ( 31.3%) | Best: 0.7308, Avg: 0.4208, Diversity: 0.5940 (stagnant: 8) | Time: 1.9min, ETA: 4.2min
Gen  48/150 ( 32.0%) | Best: 0.6923, Avg: 0.4133, Diversity: 0.5978 (stagnant: 9) | Time: 1.9min, ETA: 4.1min
Anti-stagnation: Restarted 90 individuals (parallelized)
Gen  49/150 ( 32.7%) | Best: 0.7308, Avg: 0.4283, Diversity: 0.6715 | Time: 2.0min, ETA: 4.2min
Gen  50/150 ( 33.3%) | Best: 0.6923, Avg: 0.3964, Diversity: 0.6759 | Time: 2.1min, ETA: 4.1min
Gen  51/150 ( 34.0%) | Best: 0.6538, Avg: 0.3969, Diversity: 0.6657 | Time: 2.1min, ETA: 4.1min
Gen  52/150 ( 34.7%) | Best: 0.6923, Avg: 0.3965, Diversity: 0.6657 | Time: 2.2min, ETA: 4.1min
Gen  53/150 ( 35.3%) | Best: 0.6923, Avg: 0.3936, Diversity: 0.6617 | Time: 2.2min, ETA: 4.0min
Gen  54/150 ( 36.0%) | Best: 0.7179, Avg: 0.3991, Diversity: 0.6538 | Time: 2.2min, ETA: 4.0min
Gen  55/150 ( 36.7%) | Best: 0.7179, Avg: 0.3971, Diversity: 0.6534 (stagnant: 6) | Time: 2.3min, ETA: 3.9min
Gen  56/150 ( 37.3%) | Best: 0.6795, Avg: 0.3973, Diversity: 0.6614 (stagnant: 7) | Time: 2.3min, ETA: 3.9min
Gen  57/150 ( 38.0%) | Best: 0.6923, Avg: 0.4039, Diversity: 0.6497 (stagnant: 8) | Time: 2.4min, ETA: 3.9min
Gen  58/150 ( 38.7%) | Best: 0.6795, Avg: 0.4089, Diversity: 0.6442 (stagnant: 9) | Time: 2.4min, ETA: 3.8min
Anti-stagnation: Restarted 90 individuals (parallelized)
Gen  59/150 ( 39.3%) | Best: 0.6538, Avg: 0.4178, Diversity: 0.6981 | Time: 2.5min, ETA: 3.8min
Gen  60/150 ( 40.0%) | Best: 0.6538, Avg: 0.3961, Diversity: 0.7070 | Time: 2.5min, ETA: 3.8min
Gen  61/150 ( 40.7%) | Best: 0.6538, Avg: 0.4021, Diversity: 0.6995 | Time: 2.6min, ETA: 3.7min
Gen  62/150 ( 41.3%) | Best: 0.6410, Avg: 0.3976, Diversity: 0.6972 | Time: 2.6min, ETA: 3.7min
Gen  63/150 ( 42.0%) | Best: 0.6538, Avg: 0.3970, Diversity: 0.6921 | Time: 2.7min, ETA: 3.7min
Gen  64/150 ( 42.7%) | Best: 0.6795, Avg: 0.4005, Diversity: 0.6896 | Time: 2.7min, ETA: 3.6min
Gen  65/150 ( 43.3%) | Best: 0.6795, Avg: 0.3871, Diversity: 0.6897 | Time: 2.7min, ETA: 3.6min
Gen  66/150 ( 44.0%) | Best: 0.6795, Avg: 0.3955, Diversity: 0.6901 | Time: 2.8min, ETA: 3.5min
Gen  67/150 ( 44.7%) | Best: 0.6410, Avg: 0.3804, Diversity: 0.6930 | Time: 2.8min, ETA: 3.5min
Gen  68/150 ( 45.3%) | Best: 0.6410, Avg: 0.3781, Diversity: 0.6886 | Time: 2.9min, ETA: 3.4min
Gen  69/150 ( 46.0%) | Best: 0.7051, Avg: 0.3822, Diversity: 0.6875 | Time: 2.9min, ETA: 3.4min
Gen  70/150 ( 46.7%) | Best: 0.6410, Avg: 0.3844, Diversity: 0.6874 | Time: 2.9min, ETA: 3.4min
Gen  71/150 ( 47.3%) | Best: 0.7179, Avg: 0.3879, Diversity: 0.6878 | Time: 3.0min, ETA: 3.3min
Gen  72/150 ( 48.0%) | Best: 0.6667, Avg: 0.3826, Diversity: 0.6843 | Time: 3.0min, ETA: 3.3min
Gen  73/150 ( 48.7%) | Best: 0.6410, Avg: 0.3821, Diversity: 0.6871 | Time: 3.1min, ETA: 3.2min
Gen  74/150 ( 49.3%) | Best: 0.6410, Avg: 0.3851, Diversity: 0.6842 | Time: 3.1min, ETA: 3.2min
Gen  75/150 ( 50.0%) | Best: 0.7051, Avg: 0.3889, Diversity: 0.6837 | Time: 3.2min, ETA: 3.2min
Gen  76/150 ( 50.7%) | Best: 0.6154, Avg: 0.3864, Diversity: 0.6841 | Time: 3.2min, ETA: 3.1min
Error folding sequence GAGCGGGCAGAACCCGGGGGCCUCGCUAGCGCCUGUACAAACCGAGGACGUCUCGAGGUAGGCGCUGGCGGCUGCACA: Command '['sudo', 'docker', 'exec', 'ipknot_runner', 'ipknot', '/work/tmpxtzlsmlj.fa']' died with <Signals.SIGINT: 2>.
Error folding sequence UGAGUAGAUGCUCAUUAUGUCUGUGCCAUAUUGCGCGCCGGUCUUAGAUAUAAAUCGCAAAGUUACAGCAAAUCCACA: Command '['sudo', 'docker', 'cp', '/tmp/tmpraqt2s4h.fa', 'ipknot_runner:/work/tmpraqt2s4h.fa']' returned non-zero exit status 130.
Traceback (most recent call last):
  File "/home/odin/achal/Evolutionary-Algorithms-and-Machine-Learning/Assignment_1/src/ea_runner.py", line 734, in <module>
    main()
  File "/home/odin/achal/Evolutionary-Algorithms-and-Machine-Learning/Assignment_1/src/ea_runner.py", line 678, in main
    run_experiment(experiment, device=args.device, problems_to_run=problems_to_run, run_number=args.run, enable_wandb=enable_wandb)
  File "/home/odin/achal/Evolutionary-Algorithms-and-Machine-Learning/Assignment_1/src/ea_runner.py", line 579, in run_experiment
    result = run_single_problem(
             ^^^^^^^^^^^^^^^^^^^
  File "/home/odin/achal/Evolutionary-Algorithms-and-Machine-Learning/Assignment_1/src/ea_runner.py", line 411, in run_single_problem
    ea.run_evolution()
  File "/home/odin/achal/Evolutionary-Algorithms-and-Machine-Learning/Assignment_1/src/progress_monitor.py", line 138, in enhanced_run_evolution
    original_run_evolution()
  File "/home/odin/achal/Evolutionary-Algorithms-and-Machine-Learning/Assignment_1/src/rna_folding_ea.py", line 575, in run_evolution
    fitness_scores = self.evaluate_fitness(self.population)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/odin/achal/Evolutionary-Algorithms-and-Machine-Learning/Assignment_1/src/rna_folding_ea.py", line 247, in evaluate_fitness
    fitness_scores = list(executor.map(evaluate_single, sequences))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 619, in result_iterator
    yield _result_or_cancel(fs.pop())
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 317, in _result_or_cancel
    return fut.result(timeout)
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 451, in result
    self._condition.wait(timeout)
  File "/usr/lib/python3.12/threading.py", line 355, in wait
    waiter.acquire()
KeyboardInterrupt
